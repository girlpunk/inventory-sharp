@using ActualLab.CommandR
@using BlazorInventory.Abstractions.Models
@using BlazorInventory.Client.Geolocation
@using Humanizer
@using ZXingBlazor.Components
@inject ICommander Commander
@inject NavigationManager NavigationManager
@inject IGeolocationService GeolocationService

<div class="rz-p-12 rz-text-align-center">
    <Button Type="@ButtonType.Primary" OnClick="@(() => ShowModal())">Open WebScan</Button>
</div>

<Modal Title="@("20px to Top")"
       Style="top: 20px"
       Resizable="@true"
       Maximizable="@true"
       Centered="@true"
       DefaultMaximized="@false"
       Draggable="@true"
       Width="700"
       @bind-Visible="_visible">
    <Form Model="@Inputs" OnFinish="@(() => Lookup())">
        <div class="fieldset bg-base-200 border-base-300 rounded-box w-xs border p-4">Label details
            <FormItem Label="Label Type">
                <EnumSelect TEnum="LabelType" @bind-Value="Inputs.LabelType" Mode="SelectMode.Multiple" />
            </FormItem>

            <FormItem Label="Create Scan Record">
                <Switch @bind-Checked="Inputs.CreateScanRecord">Create Scan Record</Switch>
            </FormItem>

            <FormItem Label="Identifier" Required>
                <Input @bind-Value="Inputs.Identifier"/>
            </FormItem>

            @if (ShowScanBarcode)
            {
                <BarcodeReader ScanResult="@BarcodeScan"
                               ScanBtnTitle="Scan"
                               ResetBtnTitle="Reset"
                               CloseBtnTitle="Close"
                               SelectDeviceBtnTitle="Select Device"
                               Close="@(() => { ShowScanBarcode = false; })"/>
            }
            else
            {
                <Button OnClick="@(() => { ShowScanBarcode = true; })">Scan Barcode</Button>
            }

            <Button Disabled="@(Loading)" OnClick="@(() => Lookup())" HtmlType="submit" Loading="@true">
                Submit
                @if (Loading)
                {
                    <Spin Size="SpinSize.Large" />
                }
            </Button>
        </div>

        <div class="fieldset bg-base-200 border-base-300 rounded-box w-xs border p-4">Results
            @if (Loading)
            {
                <Spin Size="SpinSize.Large" />
            }
            @if (LastScan != null)
            {
                @if (LastScan.Label == null || LastScan.Item == null)
                {
                    <Alert Type="AlertType.Warning" Message="Label could not be found.">
                        <div>
                            <Button class="btn btn-sm btn-primary" OnClick="@(() => Create())">Create New Item</Button>
                            <Button class="btn btn-sm btn-primary" OnClick="@(() => Create())">Link Existing item</Button>
                        </div>
                    </Alert>
                }
                else
                {
                    <legend class="fieldset-legend">Label</legend>
                    <ul class="list bg-base-100 rounded-box shadow-md">
                        <li class="p-4 pb-2 text-xs opacity-60 tracking-wide">Label Details</li>
                        <li class="list-row">
                            <div>
                                <div>Identifier</div>
                                <div class="text-xs uppercase font-semibold opacity-60">@LastScan.Label.Identifier</div>
                            </div>
                        </li>
                        <li class="list-row">
                            <div>
                                <div>Type</div>
                                <div class="text-xs uppercase font-semibold opacity-60">@LastScan.Label.LabelType.Humanize()</div>
                            </div>
                        </li>
                        @if (LastScan.Label.ForeignServer != null)
                        {
                            <li class="list-row">
                                <div>
                                    <div>Foreign Server</div>
                                    <div class="text-xs uppercase font-semibold opacity-60">@LastScan.Label.ForeignServer.Namespace</div>
                                </div>
                            </li>
                        }
                        else
                        {
                            <li class="list-row">
                                <div>
                                    <div>Foreign Server</div>
                                    <div class="text-xs uppercase font-semibold opacity-60">None</div>
                                </div>
                            </li>
                        }
                        <li class="list-row">
                            <div>
                                <div>Created</div>
                                <div class="text-xs uppercase font-semibold opacity-60">@LastScan.Label.Created.Humanize()</div>
                            </div>
                        </li>
                    </ul>

                    <legend class="fieldset-legend">Item</legend>
                    <ul class="list bg-base-100 rounded-box shadow-md">
                        <li class="p-4 pb-2 text-xs opacity-60 tracking-wide">Item Details</li>
                        <li class="list-row">
                            <div>
                                <div>Name</div>
                                <div class="text-xs uppercase font-semibold opacity-60">@LastScan.Item.Name</div>
                            </div>
                        </li>
                        <li class="list-row">
                            <div>
                                <div>Description</div>
                                <p class="list-col-wrap text-xs">@LastScan.Item.Description</p>
                            </div>
                        </li>
                        @if (LastScan.Item.Parent != null)
                        {
                            <li class="list-row">
                                <div>
                                    <div>Parent</div>
                                    <div class="text-xs uppercase font-semibold opacity-60">@LastScan.Item.Parent.Name</div>
                                </div>
                            </li>
                        }
                        else
                        {
                            <li class="list-row">
                                <div>
                                    <div>Parent</div>
                                    <div class="text-xs uppercase font-semibold opacity-60">None</div>
                                </div>
                            </li>
                        }
                        <li class="list-row">
                            <div>
                                <div>Created</div>
                                <div class="text-xs uppercase font-semibold opacity-60">@LastScan.Item.Created.Humanize()</div>
                            </div>
                        </li>
                        <li class="list-row">
                            <div>
                                <div>Labels</div>
                                <div class="text-xs uppercase font-semibold opacity-60">@LastScan.Item.Labels.Humanize()</div>
                            </div>
                        </li>
                        <li class="list-row">
                            <div>
                                <div>Tags</div>
                                <div class="text-xs uppercase font-semibold opacity-60">@LastScan.Item.Tags.Humanize()</div>
                            </div>
                        </li>
                        <li class="list-row">
                            <div>
                                <div>Photos</div>
                                <div class="text-xs uppercase font-semibold opacity-60">@LastScan.Item.Photos.Humanize()</div>
                            </div>
                        </li>
                    </ul>

                    @if (LastScan.Scan != null)
                    {
                        <legend class="fieldset-legend">Scan</legend>
                        <ul class="list bg-base-100 rounded-box shadow-md">
                            <li class="p-4 pb-2 text-xs opacity-60 tracking-wide">Scan Details</li>
                            <li class="list-row">
                                <div>
                                    <div>Scanner</div>
                                    <div
                                        class="text-xs uppercase font-semibold opacity-60">@LastScan.Scan.Scanner?.Name</div>
                                </div>
                            </li>
                            <li class="list-row">
                                <div>
                                    <div>Location</div>
                                    <div
                                        class="text-xs uppercase font-semibold opacity-60">@LastScan.Scan.Latitude</div>
                                    <div
                                        class="text-xs uppercase font-semibold opacity-60">@LastScan.Scan.Longitude</div>
                                </div>
                            </li>
                            <li class="list-row">
                                <div>
                                    <div>Timestamp</div>
                                    <div
                                        class="text-xs uppercase font-semibold opacity-60">@LastScan.Scan.Scanned.Humanize()</div>
                                </div>
                            </li>
                            <li class="list-row">
                                <div>
                                    <div>Type</div>
                                    <div
                                        class="text-xs uppercase font-semibold opacity-60">@LastScan.Scan.ScanType.Humanize()</div>
                                </div>
                            </li>
                        </ul>
                    }
                }
            }
            else
            {
                <span>Scan a label to begin</span>
            }
        </div>
    </Form>
</Modal>
