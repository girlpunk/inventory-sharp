@page "/Item/Create"
@using ActualLab.CommandR
@using InventorySharp.Models
@using InventorySharp.Services
@inject IForeignServerService ForeignServerService
@inject ICommander Commander
@inject NavigationManager NavigationManager

<h3>Create</h3>

<EditForm Model="@Model" OnValidSubmit="Submit">
    <fieldset class="fieldset bg-base-200 border-base-300 rounded-box w-xs border p-4">
        <legend class="fieldset-legend">Item Details</legend>

        <label class="label">Name</label>
        <InputText @bind-Value="Model.Name" class="input" max-length="120" DisplayName="Name" />

        <label class="label">Description</label>
        <InputTextArea @bind-Value="Model.Description" class="input" max-length="2024" DisplayName="Description"/>

        <label class="label">Parent</label>
        @* <InputSelect @bind-Value="Model.ParentId" DisplayName="Parent" class="select"> *@
        @* </InputSelect> *@
        <input Value="@Model.ParentId.ToString()" class="input" DisplayName="Parent" />
    </fieldset>

    <fieldset class="fieldset bg-base-200 border-base-300 rounded-box w-xs border p-4">
        <legend class="fieldset-legend">Label Details</legend>

        <label class="label">Identifier</label>
        <InputText @bind-Value="Model.Identifier" class="input" max-length="256" DisplayName="Identifier"/>

        <label class="label">Label Type</label>
        <div class="filter">
            <InputRadioGroup @bind-Value="Model.LabelType" DisplayName="Label Type" >
                <InputRadio class="btn filter-reset" TValue="LabelType?" Value="@null"/>
                @foreach (var tagType in (LabelType[])Enum.GetValuesAsUnderlyingType<LabelType>())
                {
                    <InputRadio class="btn" Value="@tagType" aria-label="@tagType">@tagType</InputRadio>
                }
            </InputRadioGroup>
        </div>

        <label class="label">Foreign Server</label>
        <input Value="@Model.ForeignServerId.ToString()" class="input" DisplayName="Foreign Server"/>
        @* <InputSelect @bind-Value="Model.ForeignServerId" DisplayName="Foreign Server" class="select"> *@
        @* </InputSelect> *@
        @if (Model.ForeignServerId == null &&
             (Model.Identifier.StartsWith("https://", StringComparison.OrdinalIgnoreCase) ||
              Model.Identifier.StartsWith("http://", StringComparison.OrdinalIgnoreCase)))
        {
            <button class="btn mt-4" @onclick="ConvertNamespace">Convert to Foreign Server</button>
        }
    </fieldset>

    <button class="btn btn-neutral mt-4" type="submit">Login</button>
</EditForm>
